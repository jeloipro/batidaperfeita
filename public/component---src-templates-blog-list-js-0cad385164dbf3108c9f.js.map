{"version":3,"sources":["webpack:///./src/templates/blog-list.js","webpack:///./src/components/post-card.js"],"names":["styles","pagination","color","Pagination","props","className","sx","isFirst","to","prevPage","rel","Array","from","length","numPages","_","i","key","blogSlug","currentPage","isLast","nextPage","BlogIndex","render","data","this","pageContext","toString","posts","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","id","title","description","React","Component","PostCard","bg","featuredImage","slug","fluid","childImageSharp","objectFit","objectPosition","alt","class","variant"],"mappings":"gNAUMA,EAAS,CACbC,WAAY,CACV,EAAK,CACHC,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAoCTC,EAAa,SAACC,GAAD,OACjB,mBACEC,UAAU,aACVC,GAAIN,EAAOC,YAEX,uBACIG,EAAMG,SACN,sBACE,YAAC,OAAD,CAAMC,GAAIJ,EAAMK,SAAUC,IAAI,QAC9B,oBAAML,UAAU,cAAa,YAAC,IAAD,OAD7B,cAKHM,MAAMC,KAAK,CAAEC,OAAQT,EAAMU,WAAY,SAACC,EAAGC,GAAJ,OACtC,kBAAIC,IAAG,qBAAsBD,EAAI,IAC/B,YAAC,OAAD,CACER,GAAE,GAAKJ,EAAMc,UAAiB,IAANF,EAAU,GAAKA,EAAI,GAC3CX,UAAWD,EAAMe,cAAgBH,EAAI,EAAI,gBAAkB,OAE1DA,EAAI,QAITZ,EAAMgB,QACN,sBACE,YAAC,OAAD,CAAMZ,GAAIJ,EAAMiB,SAAUX,IAAI,QAA9B,QACO,oBAAML,UAAU,eAAc,YAAC,IAAD,YAOzCiB,E,kGACJC,OAAA,WAAU,IAEAC,EAASC,KAAKrB,MAAdoB,KAFD,EAG2BC,KAAKrB,MAAMsB,YAArCP,EAHD,EAGCA,YAAaL,EAHd,EAGcA,SAEfP,EAA0B,IAAhBY,EACVC,EAASD,IAAgBL,EACzBL,EAAWU,EAAc,GAAM,EAHpB,mBAG+CA,EAAc,GAAGQ,WAC3EN,EAJW,UAIYF,EAAc,GAAGQ,WAExCC,EAAQJ,EAAKK,kBAAkBC,MAClCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,QACvCC,KAAI,SAAAJ,GAAI,OACP,YAAC,IAAD,CAAUf,IAAKe,EAAKC,KAAKI,GAAIb,KAAMQ,EAAKC,UAExC7B,EAAQ,CACVG,UACAE,WACAK,WACAI,SAfe,SAgBfC,cACAC,SACAC,YAGF,OACE,YAAC,IAAD,CAAQhB,UAAU,aAChB,YAAC,IAAD,CACEiC,MAAO,eAAiBnB,EAAc,OAASL,EAC/CyB,YAAa,4BAA8BpB,EAAc,OAASL,IAEpE,8BACA,mBAAKT,UAAU,yBACZuB,GAEH,YAACzB,EAAeC,K,GApCAoC,IAAMC,WA0CfnB,a,kCCjIf,iDAgDeoB,IA3CE,SAAC,GAAD,IAAGlB,EAAH,EAAGA,KAAH,OACf,uBACEnB,UAAU,YACVC,GAAI,CACFqC,GAAI,WAGLnB,EAAKU,YAAYU,cAEd,YAAC,OAAD,CAAMpC,GAAIgB,EAAKU,YAAYW,MACzB,YAAC,IAAD,CACEC,MAAOtB,EAAKU,YAAYU,cAAcG,gBAAgBD,MACtDE,UAAU,QACVC,eAAe,UACfC,IAAK1B,EAAKU,YAAYI,MAAQ,oBAC9BjC,UAAU,oBAGZ,GAEN,mBAAK8C,MAAM,gBACT,kBAAI9C,UAAU,SACZ,YAAC,OAAD,CACEG,GAAIgB,EAAKU,YAAYW,KACrBvC,GAAI,CACF8C,QAAS,mBAGV5B,EAAKU,YAAYI,QAGtB,iBACEjC,UAAU,OACVC,GAAI,CACFJ,MAAO,UAGT,wBAAOsB,EAAKU,YAAYC","file":"component---src-templates-blog-list-js-0cad385164dbf3108c9f.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport React from 'react'\nimport { Link , graphql } from \"gatsby\"\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\n\nimport Layout from \"../components/layout\"\nimport PostCard from \"../components/post-card\"\nimport SEO from \"../components/seo\"\n\nconst styles = {\n  pagination: {\n    'a': {\n      color: 'muted',\n      '&.is-active': {\n        color: 'text'\n      },\n      '&:hover': {\n        color: 'text'\n      }\n    }\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"blog-post\" } } }\n      limit: $limit\n      skip: $skip\n\t\t) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tfeaturedImage {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid(maxWidth: 540, maxHeight: 360, quality: 80) {\n                  ...GatsbyImageSharpFluid\n                  ...GatsbyImageSharpFluidLimitPresentationSize\n                }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n          }\n        }\n      }\n    }\n  }\n`\nconst Pagination = (props) => (\n  <div \n    className=\"pagination\"\n    sx={styles.pagination}\n  >\n    <ul>\n      {!props.isFirst && (\n        <li>\n          <Link to={props.prevPage} rel=\"prev\">\n          <span className=\"icon -left\"><RiArrowLeftLine/></span> Previous\n          </Link>\n        </li>\n      )}\n      {Array.from({ length: props.numPages }, (_, i) => (\n        <li key={`pagination-number${i + 1}`} >\n          <Link\n            to={`${props.blogSlug}${i === 0 ? '' : i + 1}`}\n            className={props.currentPage === i + 1 ? \"is-active num\" : \"num\"}\n          >\n            {i + 1}\n          </Link>\n        </li>\n      ))}\n      {!props.isLast && (\n        <li>\n          <Link to={props.nextPage} rel=\"next\">\n            Next <span className=\"icon -right\"><RiArrowRightLine/></span>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </div>\n)\nclass BlogIndex extends React.Component {\n  render() {\n    \n    const { data } = this.props\n    const { currentPage, numPages } = this.props.pageContext\n    const blogSlug = '/blog/' \n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? blogSlug : blogSlug + (currentPage - 1).toString()\n    const nextPage = blogSlug + (currentPage + 1).toString()\n\n    const posts = data.allMarkdownRemark.edges\n      .filter(edge => !!edge.node.frontmatter.date)\n      .map(edge =>\n        <PostCard key={edge.node.id} data={edge.node} />\n      )\n    let props = {\n      isFirst,\n      prevPage,\n      numPages,\n      blogSlug,\n      currentPage,\n      isLast,\n      nextPage\n    }\n    \n    return (\n      <Layout className=\"blog-page\">\n        <SEO\n          title={\"Blog â€” Page \" + currentPage + \" of \" + numPages}\n          description={\"Stackrole base blog page \" + currentPage + \" of \" + numPages }\n        />\n        <h1>Blog</h1>\n        <div className=\"grids col-1 sm-2 lg-3\">\n          {posts}\n        </div>\n        <Pagination {...props} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst PostCard = ({ data }) => (\n  <article \n    className=\"post-card\"\n    sx={{\n      bg: 'cardBg'\n    }}\n  >\n    {data.frontmatter.featuredImage ? \n      (\n        <Link to={data.frontmatter.slug}>\n          <Img \n            fluid={data.frontmatter.featuredImage.childImageSharp.fluid} \n            objectFit=\"cover\"\n            objectPosition=\"50% 50%\"\n            alt={data.frontmatter.title + ' - Featured image'}\n            className=\"featured-image\"\n          />\n        </Link>\n      ) : \"\"\n    }\n    <div class=\"post-content\">\n      <h2 className=\"title\">\n        <Link \n          to={data.frontmatter.slug}\n          sx={{\n            variant: 'links.postLink'\n          }}\n        >\n          {data.frontmatter.title}\n        </Link>\n      </h2>\n      <p \n        className=\"meta\"\n        sx={{\n          color: 'muted',\n        }}\n      >\n        <time>{data.frontmatter.date}</time>\n      </p>\n    </div>\n  </article>\n)\n\nexport default PostCard"],"sourceRoot":""}