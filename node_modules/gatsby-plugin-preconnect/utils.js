"use strict";

exports.__esModule = true;
exports.removeDuplicates = exports.parseOptions = void 0;

var parseOptions = function parseOptions(domainOptions) {
  return domainOptions.map(function (domainOption) {
    var domain = typeof domainOption === 'string' ? domainOption : domainOption.domain;

    if (!domain) {
      throw new Error("gatsby-plugin-preconnect: cannot parse `domain` from " + domainOption + ". Expected a string or `{domain: string}`");
    }

    var crossOrigin = domainOption.crossOrigin === undefined ? true : domainOption.crossOrigin;

    if (crossOrigin !== false && crossOrigin !== true && crossOrigin !== '' && crossOrigin !== 'anonymous' && crossOrigin !== 'use-credentials') {
      throw new Error("gatsby-plugin-preconnect: cannot parse `crossOrigin` from " + domainOption.crossOrigin + ". Expected `undefined`, ``, `false`, `true`, `anonymous`, or `use-credentials`.");
    }

    crossOrigin = crossOrigin === true ? '' : crossOrigin;
    return {
      domain: domain,
      crossOrigin: crossOrigin
    };
  });
};

exports.parseOptions = parseOptions;

var removeDuplicates = function removeDuplicates(domainOptions) {
  return domainOptions.filter(function (currentDomainOption, i) {
    for (var j = 0; j < i; j++) {
      if (currentDomainOption.crossOrigin === domainOptions[j].crossOrigin && currentDomainOption.domain === domainOptions[j].domain) {
        return false;
      }
    }

    return true;
  });
};

exports.removeDuplicates = removeDuplicates;