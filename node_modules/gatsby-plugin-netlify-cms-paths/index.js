"use strict";

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var select = require("unist-util-select");
var makeRelative = require("./make-relative");

module.exports = function () {
	var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref2, options) {
		var markdownNode = _ref2.markdownNode,
		    markdownAST = _ref2.markdownAST,
		    getNode = _ref2.getNode;

		var imgs, _getNode, absolutePath, newPaths;

		return _regenerator2.default.wrap(function _callee$(_context) {
			while (1) {
				switch (_context.prev = _context.next) {
					case 0:
						imgs = select(markdownAST, "image");

						if (!imgs.length) {
							_context.next = 7;
							break;
						}

						_getNode = getNode(markdownNode.parent), absolutePath = _getNode.absolutePath;
						_context.next = 5;
						return Promise.all(imgs.map(function (_ref3) {
							var url = _ref3.url;

							return makeRelative(absolutePath, url, options);
						}));

					case 5:
						newPaths = _context.sent;

						imgs.forEach(function (img, key) {
							img.url = newPaths[key];
						});

					case 7:
					case "end":
						return _context.stop();
				}
			}
		}, _callee, undefined);
	}));

	return function (_x, _x2) {
		return _ref.apply(this, arguments);
	};
}();
//# sourceMappingURL=index.js.map