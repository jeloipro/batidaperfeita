"use strict";

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _require = require("path"),
    relative = _require.relative,
    dirname = _require.dirname;

var getConfig = require("./get-config");
var slash = require("slash");

var cwd = process.cwd();

module.exports = function () {
	var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(markdownPath, imagePath, options) {
		var _ref2, mediaPath, publicPath, newPath;

		return _regenerator2.default.wrap(function _callee$(_context) {
			while (1) {
				switch (_context.prev = _context.next) {
					case 0:
						_context.next = 2;
						return getConfig(options);

					case 2:
						_ref2 = _context.sent;
						mediaPath = _ref2.mediaPath;
						publicPath = _ref2.publicPath;

						if (!(typeof imagePath !== "string" || imagePath.indexOf(publicPath + "/") !== 0)) {
							_context.next = 7;
							break;
						}

						return _context.abrupt("return", imagePath);

					case 7:
						markdownPath = dirname(markdownPath).replace(cwd + "/", "");
						imagePath = imagePath.replace(publicPath, mediaPath);
						newPath = relative(markdownPath, imagePath);
						return _context.abrupt("return", slash(newPath));

					case 11:
					case "end":
						return _context.stop();
				}
			}
		}, _callee, undefined);
	}));

	return function (_x, _x2, _x3) {
		return _ref.apply(this, arguments);
	};
}();
//# sourceMappingURL=make-relative.js.map