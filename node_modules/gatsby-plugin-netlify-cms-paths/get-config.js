"use strict";

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _require = require("path"),
    join = _require.join;

var readYaml = require("read-yaml-promise");

var cwd = process.cwd();
var obj = void 0;

module.exports = function () {
	var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref2) {
		var _ref2$cmsConfig = _ref2.cmsConfig,
		    cmsConfig = _ref2$cmsConfig === undefined ? "/static/admin/config.yml" : _ref2$cmsConfig;

		var configPath, _ref3, media_folder, public_folder;

		return _regenerator2.default.wrap(function _callee$(_context) {
			while (1) {
				switch (_context.prev = _context.next) {
					case 0:
						if (!obj) {
							_context.next = 2;
							break;
						}

						return _context.abrupt("return", obj);

					case 2:
						configPath = join(cwd, cmsConfig);
						_context.next = 5;
						return readYaml(configPath);

					case 5:
						_ref3 = _context.sent;
						media_folder = _ref3.media_folder;
						public_folder = _ref3.public_folder;

						if (!media_folder) {
							console.error("Missing media_folder in Netlify CMS config");
							process.exit(1);
						}
						if (!public_folder) {
							console.error("Missing public_folder in Netlify CMS config");
							process.exit(1);
						}
						obj = {
							mediaPath: media_folder,
							publicPath: public_folder
						};
						return _context.abrupt("return", obj);

					case 12:
					case "end":
						return _context.stop();
				}
			}
		}, _callee, this);
	}));

	return function (_x) {
		return _ref.apply(this, arguments);
	};
}();
//# sourceMappingURL=get-config.js.map