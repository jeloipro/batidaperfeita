{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import { jsx, IntrinsicSxElements } from '@theme-ui/core'\nimport { css, get, Theme } from '@theme-ui/css'\nimport {\n  ComponentType,\n  FC,\n  ReactNode,\n  DetailedHTMLProps,\n  HTMLAttributes,\n  ElementType,\n  ComponentProps,\n} from 'react'\nimport styled, { StyledComponent } from '@emotion/styled'\nimport { MDXProvider as _MDXProvider, useMDXComponents } from '@mdx-js/react'\n\ntype MDXProviderComponentsKnownKeys = {\n  [key in keyof IntrinsicSxElements]?: React.ComponentType<any> | string\n}\nexport interface MDXProviderComponents extends MDXProviderComponentsKnownKeys {\n  [key: string]: React.ComponentType<any> | string | undefined\n}\nexport type MdxAliases = {\n  [key in keyof IntrinsicSxElements]: keyof JSX.IntrinsicElements\n}\n\nexport type MdxAliasesKeys = 'inlineCode' | 'thematicBreak' | 'root'\n\nexport type ThemedProps = {\n  theme: Theme\n}\n\nexport interface MdxProviderProps {\n  components?: MDXProviderComponents\n  children: ReactNode\n}\n\n// mdx components\nconst tags: Array<keyof IntrinsicSxElements> = [\n  'p',\n  'b',\n  'i',\n  'a',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'img',\n  'pre',\n  'code',\n  'ol',\n  'ul',\n  'li',\n  'blockquote',\n  'hr',\n  'em',\n  'table',\n  'tr',\n  'th',\n  'td',\n  'em',\n  'strong',\n  'del',\n  // mdx\n  'inlineCode',\n  'thematicBreak',\n  // other\n  'div',\n  // theme-ui\n  'root',\n]\n\nconst aliases = {\n  inlineCode: 'code',\n  thematicBreak: 'hr',\n  root: 'div',\n} as const\n\ntype Aliases = typeof aliases\nconst isAlias = (x: string): x is keyof Aliases => x in aliases\n\nexport type StyledComponentName =\n  | keyof IntrinsicSxElements\n  | keyof JSX.IntrinsicElements\n\nconst alias = (n: StyledComponentName): keyof JSX.IntrinsicElements =>\n  isAlias(n) ? aliases[n] : n\n\nexport const themed = (key: StyledComponentName) => (props: ThemedProps) =>\n  css(get(props.theme, `styles.${key}`))(props.theme)\n\n// opt out of typechecking whenever `as` prop is used\ninterface AnyComponentProps extends JSX.IntrinsicAttributes {\n    [key: string]: unknown\n}\n\nexport type WithPoorAsProp<\n  Props,\n  As extends ElementType | undefined = undefined\n> = {\n  as?: As\n} & (As extends undefined ? Props : AnyComponentProps)\n\nexport interface ThemedComponent<Name extends ElementType> {\n  <As extends ElementType | undefined = undefined>(\n    props: WithPoorAsProp<ComponentProps<Name>, As>\n  ): JSX.Element\n}\n\nexport type StyledComponentsDict = {\n  [K in keyof IntrinsicSxElements]: K extends keyof Aliases\n    ? ThemedComponent<Aliases[K]>\n    : K extends keyof JSX.IntrinsicElements\n    ? ThemedComponent<K>\n    : never\n}\n\ntype StyledDiv = StyledComponent<\n  DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>,\n  ThemedProps,\n  Theme\n>\n\nexport const Styled: StyledDiv & StyledComponentsDict = styled('div')(\n  themed('div')\n) as StyledDiv & StyledComponentsDict\n\nexport const components = {} as StyledComponentsDict\n\ntags.forEach((tag) => {\n  // fixme?\n  components[tag] = styled(alias(tag))(themed(tag)) as any\n  Styled[tag] = components[tag] as any\n})\n\nconst createComponents = (comps: MDXProviderComponents) => {\n  const next = { ...components }\n\n  const componentKeys = Object.keys(comps) as Array<keyof IntrinsicSxElements>\n\n  componentKeys.forEach((key) => {\n    ;(next[key] as StyledComponentsDict[typeof key]) = styled<any>(comps[key])(\n      themed(key)\n    ) as StyledComponentsDict[typeof key]\n  })\n  return next\n}\n\nexport const MDXProvider: FC<MdxProviderProps> = ({ components, children }) => {\n  const outer = useMDXComponents() as MDXProviderComponents\n\n  return jsx(_MDXProvider, {\n    components: createComponents({ ...outer, ...components }),\n    children,\n  })\n}\n"],"names":["tags","aliases","inlineCode","thematicBreak","root","isAlias","x","alias","n","themed","key","props","css","get","theme","Styled","styled","components","forEach","tag","createComponents","comps","next","componentKeys","Object","keys","MDXProvider","children","outer","useMDXComponents","jsx","_MDXProvider"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAoCA,MAAMA,IAAI,GAAqC,CAC7C,GAD6C,EAE7C,GAF6C,EAG7C,GAH6C,EAI7C,GAJ6C,EAK7C,IAL6C,EAM7C,IAN6C,EAO7C,IAP6C,EAQ7C,IAR6C,EAS7C,IAT6C,EAU7C,IAV6C,EAW7C,KAX6C,EAY7C,KAZ6C,EAa7C,MAb6C,EAc7C,IAd6C,EAe7C,IAf6C,EAgB7C,IAhB6C,EAiB7C,YAjB6C,EAkB7C,IAlB6C,EAmB7C,IAnB6C,EAoB7C,OApB6C,EAqB7C,IArB6C,EAsB7C,IAtB6C,EAuB7C,IAvB6C,EAwB7C,IAxB6C,EAyB7C,QAzB6C,EA0B7C,KA1B6C;AA4B7C,YA5B6C,EA6B7C,eA7B6C;AA+B7C,KA/B6C;AAiC7C,MAjC6C,CAA/C;AAoCA,MAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,MADE;AAEdC,EAAAA,aAAa,EAAE,IAFD;AAGdC,EAAAA,IAAI,EAAE;AAHQ,CAAhB;;AAOA,MAAMC,OAAO,GAAIC,CAAD,IAAmCA,CAAC,IAAIL,OAAxD;;AAMA,MAAMM,KAAK,GAAIC,CAAD,IACZH,OAAO,CAACG,CAAD,CAAP,GAAaP,OAAO,CAACO,CAAD,CAApB,GAA0BA,CAD5B;;MAGaC,MAAM,GAAIC,GAAD,IAA+BC,KAAD,IAClDC,GAAG,CAACC,GAAG,CAACF,KAAK,CAACG,KAAP,YAAwBJ,KAAxB,CAAJ,CAAH,CAAuCC,KAAK,CAACG,KAA7C;MAkCWC,MAAM,GAAqCC,MAAM,CAAC,KAAD,CAAN,CACtDP,MAAM,CAAC,KAAD,CADgD;MAI3CQ,UAAU,GAAG;AAE1BjB,IAAI,CAACkB,OAAL,CAAcC,GAAD;AACX;AACAF,EAAAA,UAAU,CAACE,GAAD,CAAV,GAAkBH,MAAM,CAACT,KAAK,CAACY,GAAD,CAAN,CAAN,CAAmBV,MAAM,CAACU,GAAD,CAAzB,CAAlB;AACAJ,EAAAA,MAAM,CAACI,GAAD,CAAN,GAAcF,UAAU,CAACE,GAAD,CAAxB;AACD,CAJD;;AAMA,MAAMC,gBAAgB,GAAIC,KAAD;AACvB,QAAMC,IAAI,gBAAQL,UAAR,CAAV;;AAEA,QAAMM,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAtB;AAEAE,EAAAA,aAAa,CAACL,OAAd,CAAuBR,GAAD;AAClBY,IAAAA,IAAI,CAACZ,GAAD,CAAJ,GAAiDM,MAAM,CAAMK,KAAK,CAACX,GAAD,CAAX,CAAN,CACjDD,MAAM,CAACC,GAAD,CAD2C,CAAjD;AAGH,GAJD;AAKA,SAAOY,IAAP;AACD,CAXD;;MAaaI,WAAW,GAAyB,CAAC;AAAET,EAAAA,UAAF;AAAcU,EAAAA;AAAd,CAAD;AAC/C,QAAMC,KAAK,GAAGC,gBAAgB,EAA9B;AAEA,SAAOC,GAAG,CAACC,aAAD,EAAe;AACvBd,IAAAA,UAAU,EAAEG,gBAAgB,cAAMQ,KAAN,EAAgBX,UAAhB,EADL;AAEvBU,IAAAA;AAFuB,GAAf,CAAV;AAID;;;;"}